Health Check
Get v1/health

curl "http://api.tasteit.io/v1/health" -X GET

----------------------------------------------------------------------------------------

Get Restaurant Detail
Get v1/restaurants
REQUIRED PARAMETERS:
restaurant_id(string): restaurant unique identifier

RESPONSE:
Restaurant Detail Info

curl "https://api.tasteit.io/v1/restaurants?restaurant_id=c22z-70081367814700804" -X GET
curl "https://api.tasteit.io/v1/restaurants?restaurant_id=c22z-70081367814700805" -X GET (ResourceNotFoundException)
curl "https://api.tasteit.io/v1/restaurants?restaurant_id=c22z70081367814700804" -X GET (InvalidRequestException)

----------------------------------------------------------------------------------------

Get Restaurant Menu
Get v1/restaurants/menu
REQUIRED PARAMETERS:
restaurant_id(string): restaurant unique identifier

RESPONSE:
Restaurant Menu: a list in which each item contains a Menu Category (string) and a Menu Cuisines (a list of Cuisine Info)

curl "https://api.tasteit.io/v1/restaurants/menu?restaurant_id=c22z-70081367814700804" -X GET
curl "https://api.tasteit.io/v1/restaurants/menu?restaurant_id=c22z-70081367814700805" -X GET (ResourceNotFoundException)
curl "https://api.tasteit.io/v1/restaurants/menu?restaurant_id=c22z70081367814700804" -X GET (InvalidRequestException)

----------------------------------------------------------------------------------------

Get Cuisines for Restaurant 
Get v1/restaurants/cuisines
REQUIRED PARAMETERS:
restaurant_id(string): restaurant unique identifier
OPTIONAL PARAMETERS:
offset(number): starting offset (0 - 1000) default is 0.
limit(limit): limit the number of results (0 - 1000) default is 3.
cuisine_categories(string): cuisine categories to filter search reslts with.(Chinese, French, etc.)
cuisine_types(string): cuisine types to filter search results with.(Appetizer, Entree, etc.)
meal_types(string):  meal types to filter search results with.(Brunch, Lunch, Dinner, etc.)
vegetarian(boolean): vegetarian
gluten_free(boolean): gluten free
serve_at_local_hour(number): serve_at_local_hour to filter search results with.(0 - 24)

RESPONSE:
Restaurant Cuisines: a list of Cuisine Info

curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&offset=3" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&offset=6&limit=10" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&cuisine_categories=Italian" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&limit=15&cuisine_types=SOUP%2BPASTA" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&limit=15&meal_types=BRUNCH" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&limit=15&vegetarian=true" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&limit=15&vegetarian=false&gluten_free=true" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&limit=15&serve_at_local_hour=13.5" -X GET
curl "https://api.tasteit.io/v1/restaurants/cuisines?restaurant_id=c22z-70081367814700804&limit=15&serve_at_local_hour=21.5" -X GET

----------------------------------------------------------------------------------------


Update Cuisine for Restaurant 
Restaurant authentication token is required.
Post v1/restaurants/cuisine
REQUIRED JSON OBJECT:
UpdateCuisineRequest(refer to DataModel/server_response_json_schema/io.tasteit.rest.activities.model.request.portal.UpdateCuisineRequest)

RESPONSE:
Updated cuisine info, in CuisineResponse(refer to DataModel/server_response_json_schema/io.tasteit.rest.activities.model.response.CuisineResponse)


----------------------------------------------------------------------------------------
Favorite Cuisine
Post v1/cuisines/favorite
REQUIRED PARAMETERS:
cuisine_id(string): cuisine unique identifier

RESPONSE
favorites(number)

curl "https://Test-768510837.us-west-2.elb.amazonaws.com/v1/cuisines/favorite?cuisine_id=c22z-70081367814700804-0015" -X POST

----------------------------------------------------------------------------------------

Search Cuisines 
GET  v1/cuisines/search
REQUIRED PARAMETERS:
latitude(number): geographic coordinate latitude
longitude(number): geographic coordinate longitude
sort_by(string): sorting criteria (distance or restaurant_popularity or cuisine_popularity)
local_hour(number): local hour used to determine if restaurants open
OPTIONAL PARAMETERS:
radius(number): Search radius in meters. (0 - 8000)
offset(number): starting offset 
limit(number): limit the number of results (0 - 100)
cuisine_categories(string): cuisine category to filter search reslts with.(Chinese, French, Italian, etc.)
cuisine_types(string): meal_type category to filter search results with.(Appetizer, Entree, etc.)
meal_types(string): meal_type to filter search results with.(Brunch, Lunch, Dinner, etc.)
vegetarian(boolean): vegetarian
gluten_free(boolean): gluten free
open_now(boolean): open now

RESPONSE:
It contains the next offset and cuisines (a list in which each item contains Restaurant Distance and Restaurant Cuisines(a list of Cuisine Info))

curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.650520&longitude=-122.349370&sorted_by=distance&local_hour=13.5" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.6623265538809&longitude=-122.315362086634&sorted_by=distance&local_hour=13.5&limit=3&radius=8000&offset=0" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.6623265538809&longitude=-122.315362086634&sorted_by=distance&local_hour=13.5&limit=3&radius=8000&offset=0&cuisine_categories=Italian&cuisine_types=SOUP" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.650520&longitude=-122.349370&sorted_by=distance&local_hour=13.5" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.650520&longitude=-122.349370&sorted_by=distance&local_hour=13.5&radius=100" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=1600" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&offset=1" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&limit=2" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&cuisine_categories=Italian%2BChinese" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&cuisine_types=IceCream" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&meal_types=Brunch%2BDinner" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&meal_types=Brunch%2BDinner" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=13.5&radius=6400&open_now=true" -X GET
curl "https://api.tasteit.io/v1/cuisines/search?latitude=47.662272&longitude=-122.315660&sorted_by=distance&local_hour=14.5&radius=6400&open_now=true" -X GET

FacebookLogin
GET  v1/tokens
REQUIRED PARAMETERS:
grant_type(String): facebook, 
fb_user_token(String): facebook access token

RESPONSE:
It contains access token used for future authentication & authorization, token type and user principal
JSON: https://github.com/Unicorn-Projects/documents/blob/master/DataModel/server_response_json_schema/io.tasteit.rest.activities.model.response.TokenResponse

curl "https://api.tasteit.io/v1/tokens?fb_user_token=CAAWIP0CSYboBAEi8Q1ZApCvfZBZCxEreAlmKkCZCfAHVCqA3DapXVOUoyCUeCKwavyiZCzih5gWxkJuWvNZC8Vc79v67nVtCQMTKUNdY2obbVqbGvEPGzcEYUa3SMg3gfMLomjIzAoZCsDpcniZCkEvHofZBtnkYlHnIALT7ZBIPkKe2t9mRZBlZBfNKGZApiMBAZCN7mpZBZBglJ8a0cZB0zelOtXhfMxnDyEZAm8ZBto84sUCUwvsZBxjVwbeatlM8" -X GET

GetUserProfile
GET  v1/users/profile/{user_principal}
REQUIRED PARAMETERS:
user_display_name(String): user principal id, 
access_token(String): access token
access_token(user_facebook_id): access token
access_token(String): access token
access_token(String): access token

    "user_display_name";
    public static final String USER_PROFILE_PHOTO_URL = "user_profile_photo_url";
    public static final String USER_FACEBOOK_ID = "user_facebook_id";



How to generate Authorization Header
echo "user prinicipal:access token" | base64

RESPONSE:
It contains user_principal, access_token, user_display_name, user_profile_photo_url, userFacebookId 


curl -v "http://localhost:8080/v1/tokens/user_principal" -H "Authorization: Bearer <Generated Authorization Header>" -X GET
